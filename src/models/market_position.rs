/*
 * Kalshi Trade API
 *
 * This documentation describes Kalshi's trading API (known as Trade API v2). By using this API, you agree to Kalshi's Developer Agreement (https://kalshi.com/developer-agreement).
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@kalshi.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MarketPosition : MarketPosition is your accumulated position on a specific market considering all orders and trades.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MarketPosition {
    /// Fees paid on fill orders, in cents.
    #[serde(rename = "fees_paid")]
    pub fees_paid: i64,
    /// last time the position is updated.
    #[serde(rename = "last_updated_ts")]
    pub last_updated_ts: String,
    /// Cost of the aggregate market position in cents.
    #[serde(rename = "market_exposure")]
    pub market_exposure: i64,
    /// Number of contracts bought in this market. Negative means NO contracts and positive means YES contracts.
    #[serde(rename = "position")]
    pub position: i32,
    /// Locked in profit and loss, in cents.
    #[serde(rename = "realized_pnl")]
    pub realized_pnl: i64,
    /// Aggregate size of resting orders in contract units.
    #[serde(rename = "resting_orders_count")]
    pub resting_orders_count: i32,
    /// Unique identifier for the market.
    #[serde(rename = "ticker")]
    pub ticker: String,
    /// Total spent on this market in cents.
    #[serde(rename = "total_traded")]
    pub total_traded: i64,
}

impl MarketPosition {
    /// MarketPosition is your accumulated position on a specific market considering all orders and trades.
    pub fn new(fees_paid: i64, last_updated_ts: String, market_exposure: i64, position: i32, realized_pnl: i64, resting_orders_count: i32, ticker: String, total_traded: i64) -> MarketPosition {
        MarketPosition {
            fees_paid,
            last_updated_ts,
            market_exposure,
            position,
            realized_pnl,
            resting_orders_count,
            ticker,
            total_traded,
        }
    }
}

