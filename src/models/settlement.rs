/*
 * Kalshi Trade API
 *
 * This documentation describes Kalshi's trading API (known as Trade API v2). By using this API, you agree to Kalshi's Developer Agreement (https://kalshi.com/developer-agreement).
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@kalshi.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Settlement {
    /// Settlement result for this market.
    #[serde(rename = "market_result")]
    pub market_result: String,
    /// Number of no contracts owned on settlement.
    #[serde(rename = "no_count")]
    pub no_count: i64,
    /// Cost of the aggregate no position in this market on settlement in cents.
    #[serde(rename = "no_total_cost")]
    pub no_total_cost: i64,
    /// Value earned in this settlement in cents.
    #[serde(rename = "revenue")]
    pub revenue: i64,
    /// Date and time in the ISO 8601 spec. Example: 2022-11-30T15:00:00Z
    #[serde(rename = "settled_time")]
    pub settled_time: String,
    /// Unique identifier for markets.
    #[serde(rename = "ticker")]
    pub ticker: String,
    /// Number of yes contracts owned on settlement.
    #[serde(rename = "yes_count")]
    pub yes_count: i64,
    /// Cost of the aggregate yes position in this market on settlement in cents.
    #[serde(rename = "yes_total_cost")]
    pub yes_total_cost: i64,
}

impl Settlement {
    pub fn new(market_result: String, no_count: i64, no_total_cost: i64, revenue: i64, settled_time: String, ticker: String, yes_count: i64, yes_total_cost: i64) -> Settlement {
        Settlement {
            market_result,
            no_count,
            no_total_cost,
            revenue,
            settled_time,
            ticker,
            yes_count,
            yes_total_cost,
        }
    }
}

