/*
 * Kalshi Trade API
 *
 * This documentation describes Kalshi's trading API (known as Trade API v2). By using this API, you agree to Kalshi's Developer Agreement (https://kalshi.com/developer-agreement).
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@kalshi.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AmendOrderRequest {
    /// Specifies if this is a buy or sell order. Cannot be amended and is validated against original order.
    #[serde(rename = "action")]
    pub action: String,
    #[serde(rename = "client_order_id")]
    pub client_order_id: String,
    /// Number of contracts to be bought or sold. This is the max number of possible filled contracts.
    #[serde(rename = "count")]
    pub count: i32,
    /// Submitting price of the No side of the trade, in cents. Exactly one of yes_price and no_price must be passed. If both prices are passed, return 400.
    #[serde(rename = "no_price", skip_serializing_if = "Option::is_none")]
    pub no_price: Option<i64>,
    /// Specifies if this is a 'yes' or 'no' order. Cannot be amended and is validated against original order.
    #[serde(rename = "side")]
    pub side: String,
    /// The ticker of the market the order will be placed in. Cannot be amended and is validated against original order.
    #[serde(rename = "ticker")]
    pub ticker: String,
    #[serde(rename = "updated_client_order_id")]
    pub updated_client_order_id: String,
    /// Submitting price of the Yes side of the trade, in cents. Exactly one of yes_price and no_price must be passed. If both prices are passed, return 400.
    #[serde(rename = "yes_price", skip_serializing_if = "Option::is_none")]
    pub yes_price: Option<i64>,
}

impl AmendOrderRequest {
    pub fn new(action: String, client_order_id: String, count: i32, side: String, ticker: String, updated_client_order_id: String) -> AmendOrderRequest {
        AmendOrderRequest {
            action,
            client_order_id,
            count,
            no_price: None,
            side,
            ticker,
            updated_client_order_id,
            yes_price: None,
        }
    }
}

